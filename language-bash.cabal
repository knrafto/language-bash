cabal-version:      2.2
name:               language-bash
version:            0.10.0
category:           Language
license:            BSD-3-Clause
license-file:       LICENSE
author:             Kyle Raftogianis
maintainer:         Kyle Raftogianis <knrafto@gmail.com>
copyright:          Copyright (c) 2013-2024 Kyle Raftogianis
build-type:         Simple
homepage:           http://github.com/knrafto/language-bash/
bug-reports:        http://github.com/knrafto/language-bash/issues
tested-with:        GHC == 8.4.3, GHC == 8.8.3, GHC == 9.4.8, GHC == 9.6.6
synopsis:           Parsing and pretty-printing Bash shell scripts
description:
    A library for parsing, pretty-printing, and manipulating
    Bash shell scripts.

extra-source-files:
  .gitignore
  README.md
  tests/pretty/*.golden
  tests/pretty/*.out
  tests/pretty/*.sh

source-repository head
  type: git
  location: git://github.com/knrafto/language-bash.git

library
  default-language: Haskell2010
  hs-source-dirs: src

  exposed-modules:
    Language.Bash.Cond
    Language.Bash.Expand
    Language.Bash.Parse
    Language.Bash.Parse.Word
    Language.Bash.Pretty
    Language.Bash.Syntax
    Language.Bash.Word

  other-modules:
    Language.Bash.Operator
    Language.Bash.Parse.Builder
    Language.Bash.Parse.Internal

  build-depends:
    -- Notes on version bounds:
    --
    -- * base-4.11 is the first where Prelude re-exports Semigroup(s). This
    --   version of base is bundled with 8.4.1.
    -- * prettyprinter-1.7.0 is the first version where Prettyprinter module
    --   hierarchy was introduced.
    base          >= 4.11 && < 5,
    parsec        >= 3.0 && < 4.0,
    prettyprinter >= 1.7 && < 2.0,
    transformers  >= 0.2 && < 0.7

  ghc-options: -Wall

test-suite tests
  default-language: Haskell2010
  type: exitcode-stdio-1.0
  hs-source-dirs: tests
  main-is: Tests.hs

  build-depends:
    base,
    directory,
    filepath,
    language-bash,
    parsec,
    process,
    QuickCheck,
    tasty,
    tasty-golden,
    tasty-quickcheck,
    tasty-hunit,
    tasty-expected-failure
